<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">

    <title>Title</title>

</head>
<body>


<!--<div id="content">Fight</div>-->
<!--<h1>Правила бойцовского клуба</h1>-->
<!--<div id="wrap">-->
<!--    <div class="rules rule1">-->
<!--        <h2>Первое правило Бойцовского клуба.</h2>-->
<!--        <p>Никому не рассказывать о Бойцовском клубе.</p>-->
<!--    </div>-->
<!--    <div class="rules rule2">-->
<!--        <h2>Второе правило Бойцовского клуба.</h2>-->
<!--        <p>Никогда никому не рассказывать о Бойцовском клубе.</p>-->
<!--    </div>-->
<!--    <div class="rules rule3">-->
<!--        <h2>Третье правило Бойцовского клуба.</h2>-->
<!--        <p>В схватке участвуют только двое.</p>-->
<!--    </div>-->
<!--    <div class="rules rule4">-->
<!--        <h2>Четвертое правило Бойцовского клуба.</h2>-->
<!--        <p>Не более одного поединка за один раз.</p>-->
<!--    </div>-->

<!--    <div class="rules rule5">-->
<!--        <h2>Пятое правило Бойцовского клуба.</h2>-->
<!--        <p>Бойцы сражаются без обуви и голые по пояс.</p>-->
<!--    </div>-->
<!--    <div class="rules rule6">-->
<!--        <h2>Шестое правило Бойцовского клуба.</h2>-->
<!--        <p>Поединок продолжается столько, сколько потребуется.</p>-->
<!--    </div>-->
<!--    <div class="rules rule7">-->
<!--        <h2>Седьмое правило Бойцовского клуба.</h2>-->
<!--        <p>Если противник потерял сознание или делает вид, что потерял, или говорит «Хватит» — поединок-->
<!--            окончен.</p>-->
<!--    </div>-->
<!--    <div class="rules rule8">-->
<!--        <h2>Восьмое и последнее правило Бойцовского клуба.</h2>-->
<!--        <p>Новичок обязан принять бой.</p>-->
<!--    </div>-->
<!--</div>-->




<script>
    // //
    // // - создать 5 объектов. В каждом объекте не менее 3х полей. Все объекты разные по набору полей. (Т.е поле name  должно присутствовать только 1 раз в одном объекте )
    // let user = {name: 'Ivan', age: 42, car: true};
    // let poet = {poet: 'Lesya Ukrainka', issues: 12, yearissue: 2002};
    // let lang = {language: 'English', level: 'B2', grammar: 'false'};
    // let course = {course: 'JCX', period: '6 month', newexperience: true};
    // let computer = {model: 'HP', RAM: 6, mouse: true};

    // // - создать 5 объектов с полностью разным набором полей. В каждом объекте должен присутсвовать массив и внутренний объект. Опишите что угодно, машину, картину, болт...
    // // Пример : let man = { name: 'kokos', skills : ['java','js'] , wife: { name: 'cherry' } };
    //
    // let obj1 = { name: 'Igor', age : [33] , wife: { name: 'Iryna' }};
    // let obj2 = { car: 'Toyota', year : [2002] , model: { style: 'sedan' }};
    // let obj3 = { painter: 'Da Vinci', picture : ['Mona Lisa'] , MonaLisa: { anothername: 'La Gioconda' }};
    // let obj4 = { racer: 'Shumacher', raceCar : ['Ferrari'] , alias: { redteam: 'red baron' }};
    // let obj5 = { goldball: 2, brandshoes : ['Nike'] , career: { status: 'end' }};

    //
    // // - При помощи for in вывести все ключи всех объектов из задания 1 и 2
    //
    // let user = {name: 'Ivan', age: 42, car: true};
    // let poet = {poet: 'Lesya Ukrainka', issues: 12, yearissue: 2002};
    // let lang = {language: 'English', level: 'B2', grammar: 'false'};
    // let course = {course: 'JCX', period: '6 month', newexperience: true};
    // let computer = {model: 'HP', RAM: 6, mouse: true};
    // for (let key in user) {
    //     console.log(key);
    // }
    // for (let key in poet) {
    //     console.log(key);
    // }
    // for (let key in lang) {
    //     console.log(key);
    // }
    // for (let key in course) {
    //     console.log(key);
    // }
    // for (let key in computer) {
    //     console.log(key);
    // }
    //
    // let obj1 = { name: 'Igor', age : [33] , wife: { name: 'Iryna' }};
    // let obj2 = { car: 'Toyota', year : [2002] , model: { style: 'sedan' }};
    // let obj3 = { painter: 'Da Vinci', picture : ['Mona Lisa'] , MonaLisa: { anothername: 'La Gioconda' }};
    // let obj4 = { racer: 'Shumacher', raceCar : ['Ferrari'] , alias: { redteam: 'red baron' }};
    // let obj5 = { goldball: 2, brandshoes : ['Nike'] , career: { status: 'end' }};
    //
    // for (let key in obj1) {
    //     console.log(key);
    // for (let key in obj2) {
    // //     console.log(key);
    // for (let key in obj3) {
    //     console.log(key);
    // for (let key in obj4) {
    //     console.log(key);
    // for (let key in obj5) {
    //     console.log(key);


    // // // - Создать массив из 10 объектов cars и заполнить его машинами с полями модель, год выпуска, мощность, цвет. (Значаения полей могу быть выдуманными)
    // let cars =[
    //     {model: 'Toyota', year: 2005, hp: 160, color: 'red'},
    //     {model: 'Mercedes', year: 2018, hp: 193, color: 'green'},
    //     {model: 'BMW', year: 1998, hp: 217, color: 'blue'},
    //     {model: 'Volkswagen', year: 2001, hp: 190, color: 'white'},
    //     {model: 'Porsche', year: 2016, hp: 279, color: 'orange'},
    //     {model: 'Bentley', year: 2007, hp: 226, color: 'brown'},
    //     {model: 'Infinity', year: 2014, hp: 190,  color: 'silver'},
    //     {model: 'Ford', year: 2005, hp: 160, color: 'yellow'},
    //     {model: 'Renault', year: 2000, hp: 150, color: 'aqua'},
    //     {model: 'Skoda', year: 2015, hp: 160, color: 'black'},
    //     ];
    // // - проитерировать каждый массив из задания 5,6,7 при помощи while.
    // // - проитерировать каждый массив из задания 5,6,7 при помощи for .
    // // - проитерировать каждый массив из задания 5,6,7 при помощи  for of.
    //
    // // let i = 0;
    // // while (i < cars.length) {
    // //     console.log(cars[i]);
    // //     i++
    // // }
    // // for (let i = 0; i < cars.length; i++) {
    // //     console.log(cars[i]);
    // // }
    //
    // // let i = 0;
    // // for (let car of cars) {
    // //     console.log(cars[i]);
    // // }




    // // // - Создать массив объектов cities и заполнить его объектами с полями название, популяция, страна, регион. (Значаения полей могу быть выдуманными)
    // let cities  = [
    //     {name: 'Lviv', population: 800000, country: 'Ukraine', region: 'West'},
    //     {name: 'Kyiv', population: 2100000, country: 'Ukraine', region: 'Center'},
    //     {name: 'Dnipro', population: 992000, country: 'Ukraine', region: 'East'},
    // ];
    // // - проитерировать каждый массив из задания 5,6,7 при помощи while.
    // // - проитерировать каждый массив из задания 5,6,7 при помощи for .
    // // - проитерировать каждый массив из задания 5,6,7 при помощи  for of.
    //
    // let i = 0;
    // while (i < cities.length) {
    //     console.log(cities[i]);
    //     i++
    // }
    // for (let i = 0; i < cities.length; i++) {
    //     console.log(cities[i]);
    // }
    //
    // let i = 0;
    // for (let city of cities) {
    //     console.log(cities[i]);
    // }

    // // // - Создать массив объектов cars и заполнить его машинами с полями модель, год выпуска, мощность, цвет, водитель. Водитель является отдельным объектом с полями имя, возраст, пол, стаж.
    // //
    // //
    // let cars =[
    //     {model: 'Toyota', year: 2005, hp: 160, color: 'red', driver: {name: 'Petro', age: 42, sex: 'man', experience: '20 years'}},
    //     {model: 'Mercedes', year: 2018, hp: 193, color: 'green', driver: {name: 'Nastya', age: 28, sex: 'woman', experience: '3 years'}},
    //     {model: 'BMW', year: 1998, hp: 217, color: 'blue', driver: {name: 'Oleg', age: 35, sex: 'man', experience: '10 years'}},
    //     {model: 'Volkswagen', year: 2001, hp: 190, color: 'white', driver: {name: 'Ivan', age: 26, sex: 'man', experience: '7'}},
    //     {model: 'Porsche', year: 2016, hp: 279, color: 'orange', driver: {name: 'Ilona', age: 33, sex: 'woman', experience: '6'}},
    //     {model: 'Bentley', year: 2007, hp: 226, color: 'brown', driver: {name: 'Valeriy', age: 51, sex: 'man', experience: '30'}},
    //     {model: 'Infinity', year: 2014, hp: 190,  color: 'silver', driver: {name: 'Vira', age: 25, sex: 'woman', experience: '4'}},
    //     {model: 'Ford', year: 2005, hp: 160, color: 'yellow', driver: {name: 'Yevgen', age: 40, sex: 'man', experience: '17'}},
    //     {model: 'Renault', year: 2000, hp: 150, color: 'aqua', driver: {name: 'Yaroslav', age: 28, sex: 'man', experience: '8'}},
    //     {model: 'Skoda', year: 2015, hp: 160, color: 'black', driver: {name: 'Oleksandr', age: 22, sex: 'man', experience: '4'}},
    //     ];
    // // - проитерировать каждый массив из задания 5,6,7 при помощи while.
    // // - проитерировать каждый массив из задания 5,6,7 при помощи for .
    // // - проитерировать каждый массив из задания 5,6,7 при помощи  for of.
    //
    //
    // let i = 0;
    // while (i < cars.length) {
    //     console.log(cars[i]);
    //     i++
    // };
    // for (let i = 0; i < cars.length; i++) {
    //     console.log(cars[i]);
    // }
    //
    // let i = 0;
    // for (let car of cars) {
    //     console.log(cars[i]);
    // }



    // // - взять объекты из задания 1 и превратить каждый в json.
    // // - взять json из задания 11 и превратить их обратно в объекты.
    //
    // let user = {name: 'Ivan', age: 42, car: true};
    // let poet = {poet: 'Lesya Ukrainka', issues: 12, yearissue: 2002};
    // let lang = {language: 'English', level: 'B2', grammar: 'false'};
    // let course = {course: 'JCX', period: '6 month', newexperience: true};
    // let computer = {model: 'HP', RAM: 6, mouse: true};
    //
    // let stringify = JSON.stringify(user);
    // console.log(stringify);
    // let parse = JSON.parse(stringify);
    // console.log(parse);
    //
    // let stringify = JSON.stringify(poet);
    // console.log(stringify);
    // let parse = JSON.parse(stringify);
    // console.log(parse);
    //
    //
    // let stringify = JSON.stringify(lang);
    // console.log(stringify);
    // let parse = JSON.parse(stringify);
    // console.log(parse);
    //
    //
    // let stringify = JSON.stringify(course);
    // console.log(stringify);
    // let parse = JSON.parse(stringify);
    // console.log(parse);
    //
    //
    // let stringify = JSON.stringify(computer);
    // console.log(stringify);
    // let parse = JSON.parse(stringify);
    // console.log(parse);


    // // - взять массив из задания 5,в цикле перебрать его объекты превратив их в json .
    //
    // let cars =[
    //     {model: 'Toyota', year: 2005, hp: 160, color: 'red'},
    //     {model: 'Mercedes', year: 2018, hp: 193, color: 'green'},
    //     {model: 'BMW', year: 1998, hp: 217, color: 'blue'},
    //     {model: 'Volkswagen', year: 2001, hp: 190, color: 'white'},
    //     {model: 'Porsche', year: 2016, hp: 279, color: 'orange'},
    //     {model: 'Bentley', year: 2007, hp: 226, color: 'brown'},
    //     {model: 'Infinity', year: 2014, hp: 190,  color: 'silver'},
    //     {model: 'Ford', year: 2005, hp: 160, color: 'yellow'},
    //     {model: 'Renault', year: 2000, hp: 150, color: 'aqua'},
    //     {model: 'Skoda', year: 2015, hp: 160, color: 'black'},
    //     ];
    //
    // for (let i = 0; i < 1; i++) {
    //    let jsonCars = JSON.stringify(cars);
    //     console.log(jsonCars);
    //     document.write(jsonCars);
    //
    // }


    // // // - взять массив из задания 6,в цикле перебрать его объекты превратив их в json .
    // //
    // let cities  = [
    //     {name: 'Lviv', population: 800000, country: 'Ukraine', region: 'West'},
    //     {name: 'Kyiv', population: 2100000, country: 'Ukraine', region: 'Center'},
    //     {name: 'Dnipro', population: 992000, country: 'Ukraine', region: 'East'},
    // ];
    //
    // for (let i = 0; i < 1; i++) {
    //    let jsonCities = JSON.stringify(cities);
    //     console.log(cities);
    //     console.log(jsonCities);
    //     document.write(jsonCities);
    //
    // }

    //
    // // // // - взять массив из задания 7,в цикле перебрать его объекты превратив их в json и сразу скоприовать в новый массив.
    //
    // let cars =[
    //     {model: 'Toyota', year: 2005, hp: 160, color: 'red', driver: {name: 'Petro', age: 42, sex: 'man', experience: '20 years'}},
    //     {model: 'Mercedes', year: 2018, hp: 193, color: 'green', driver: {name: 'Nastya', age: 28, sex: 'woman', experience: '3 years'}},
    //     {model: 'BMW', year: 1998, hp: 217, color: 'blue', driver: {name: 'Oleg', age: 35, sex: 'man', experience: '10 years'}},
    //     {model: 'Volkswagen', year: 2001, hp: 190, color: 'white', driver: {name: 'Ivan', age: 26, sex: 'man', experience: '7'}},
    //     {model: 'Porsche', year: 2016, hp: 279, color: 'orange', driver: {name: 'Ilona', age: 33, sex: 'woman', experience: '6'}},
    //     {model: 'Bentley', year: 2007, hp: 226, color: 'brown', driver: {name: 'Valeriy', age: 51, sex: 'man', experience: '30'}},
    //     {model: 'Infinity', year: 2014, hp: 190,  color: 'silver', driver: {name: 'Vira', age: 25, sex: 'woman', experience: '4'}},
    //     {model: 'Ford', year: 2005, hp: 160, color: 'yellow', driver: {name: 'Yevgen', age: 40, sex: 'man', experience: '17'}},
    //     {model: 'Renault', year: 2000, hp: 150, color: 'aqua', driver: {name: 'Yaroslav', age: 28, sex: 'man', experience: '8'}},
    //     {model: 'Skoda', year: 2015, hp: 160, color: 'black', driver: {name: 'Oleksandr', age: 22, sex: 'man', experience: '4'}},
    //     ];
    //
    // let newArr = [];
    // for (let i = 0; i < 1; i++) {
    //     let newCars = cars[i]
    //     newArr[i] = (JSON.stringify(cars))
    //     console.log(cars);
    //     console.log(newArr[i]);
    //
    // }


    //
    // // - Создать массив пользователей. У каждого пользователя обязательно должено быть поле skills которое является массивом. Проитерировать массив пользователей и в каждом пользователе проитерировать его массив skills
    //
    //
    // let users = [
    //     {name: 'vasya', age: 31, status: false, skills: ['JS']},
    //     {name: 'petya', age: 30, status: true, skills: ['JS']},
    //     {name: 'kolya', age: 29, status: true, skills: ['JS']},
    //     {name: 'olya', age: 28, status: false, skills: ['JS']},
    //     {name: 'max', age: 30, status: true, skills: ['JS']},
    //     {name: 'anya', age: 31, status: false, skills: ['JS']},
    //     {name: 'oleg', age: 28, status: false, skills: ['JS']},
    //     {name: 'andrey', age: 29, status: true, skills: ['JS']},
    //     {name: 'masha', age: 30, status: true, skills: ['JS']},
    //     {name: 'olya', age: 31, status: false, skills: ['JS']},
    //     {name: 'max', age: 31, status: true, skills: ['JS']}
    // ];
    //
    // for (let user of users) {
    //     console.log(user.name);
    //         for (let skill of user.skills) {
    //         console.log(skill);
    //     }
    // }

    //
    // // - Создать массив пользователей. У каждого пользователя обязательно должено быть поле skills которое является массивом. Проитерировать массив пользователей и в каждом пользователе проитерировать его массив skills. Скопировать все skills всех пользователей в отедльный массив
    //
    //
    //
    // let users = [
    //     {name: 'vasya', age: 31, status: false, skills: ['JS']},
    //     {name: 'petya', age: 30, status: true, skills: ['JS']},
    //     {name: 'kolya', age: 29, status: true, skills: ['JS']},
    //     {name: 'olya', age: 28, status: false, skills: ['JS']},
    //     {name: 'max', age: 30, status: true, skills: ['JS']},
    //     {name: 'anya', age: 31, status: false, skills: ['JS']},
    //     {name: 'oleg', age: 28, status: false, skills: ['JS']},
    //     {name: 'andrey', age: 29, status: true, skills: ['JS']},
    //     {name: 'masha', age: 30, status: true, skills: ['JS']},
    //     {name: 'olya', age: 31, status: false, skills: ['JS']},
    //     {name: 'max', age: 31, status: true, skills: ['JS']}
    // ];
    //
    // let newUsers = [];
    // for (let user of users) {
    //     console.log(user.name);
    //         for (let skill of user.skills) {
    //         newUsers.push(skill)
    //     }
    // }
    // console.log(newUsers);

    // // - За допомогою 2х циклів циклів проітеррувати  даний масив і масив кожного об'єкта.
    // let users = [{name: 'vasya', age: 31, status: false, skills: ['java', 'js']},
    // {name: 'petya', age: 30, status: true, skills: ['java', 'js', 'html']},
    // {name: 'kolya', age: 29, status: true, skills: ['mysql', ',mongo']},
    // {name: 'olya', age: 28, status: false, skills: ['java', 'js']},
    // {name: 'max', age: 30, status: true, skills: ['mysql', ',mongo']}];
    //
    //
    // let i = 0;
    // let newUsers = [];
    // for (let user of users) {
    //     console.log(user);
    //     for (let skill of user.skills) {
    //         newUsers.push(user)
    //     }
    // }
    // console.log(newUsers);
    //


    // // // - З масиву users за допомогою циклу витягнути адреси користувачів і записати (скопіювати) їх в інший порожній масив.
    // // // - За допомоги циклу проітерувати  масив users, записати кожного юзера в сівй блок за допомоги document.createElement. Всі данні в одному блоці.
    // // // - За допомоги циклу проітерувати  масив users, записати кожного юзера в сівй блок за допомоги document.createElement, розділивши всі властивості по своїм блокам (div>div*4)
    // // // - За допомоги циклу проітерувати  масив users, записати кожного юзера в сівй блок за допомоги document.createElement, розділивши всі властивості по своїм блокам , блок з адресою зробити окремим блоком, з блоками для кожної властивості
    // // //
    // let users = [{
    //     name: 'vasya',
    //     age: 31,
    //     status: false,
    //     address: {city: 'Lviv', country: 'Ukraine', street: 'Shevchenko', houseNumber: 1}
    // }, {
    //     name: 'petya',
    //     age: 30,
    //     status: true,
    //     address: {city: 'New York', country: 'USA', street: 'East str', houseNumber: 21}
    // }, {
    //     name: 'kolya',
    //     age: 29,
    //     status: true,
    //     address: {city: 'Budapest', country: 'Hungary', street: 'Kuraku', houseNumber: 78}
    // }, {
    //     name: 'olya',
    //     age: 28,
    //     status: false,
    //     address: {city: 'Prague', country: 'Czech', street: 'Paster', houseNumber: 56}
    // }, {
    //     name: 'max',
    //     age: 30,
    //     status: true,
    //     address: {city: 'Istanbul', country: 'Turkey', street: 'Mikar', houseNumber: 39}
    // }, {
    //     name: 'anya',
    //     age: 31,
    //     status: false,
    //     address: {city: 'Rio', country: 'Brasil', street: 'Ronaldi', houseNumber: 5}
    // }, {
    //     name: 'oleg',
    //     age: 28,
    //     status: false,
    //     address: {city: 'Montreal', country: 'Canada', street: 'Acusto', houseNumber: 90}
    // }, {
    //     name: 'andrey',
    //     age: 29,
    //     status: true,
    //     address: {city: 'Quebeck', country: 'Canada', street: 'Binaro', houseNumber: 33}
    // }, {
    //     name: 'masha',
    //     age: 30,
    //     status: true,
    //     address: {city: 'Moscow', country: 'Russia', street: 'Gogolia', houseNumber: 1}
    // }, {
    //     name: 'olya',
    //     age: 31,
    //     status: false,
    //     address: {city: 'Portland', country: 'USA', street: 'Forest str', houseNumber: 4}
    // }, {
    //     name: 'max',
    //     age: 31,
    //     status: true,
    //     address: {city: 'Cairo', country: 'Egypt', street: 'Seashore', houseNumber: 45}
    // }];
    //
    // // let newArr = [];
    // // for (let user of users) {
    // //     newArr.push(user.address)
    // // }
    // // console.log(users);
    // // console.log(newArr);
    //
    // // _________________________________________
    // // for (let i = 0; i < users.length; i++) {
    // //     let user = users[i];
    // //     let div = document.createElement('div')
    // //     div.innerText = `${user.name} ${user.age} ${user.status}`
    // //     document.body.appendChild(div)
    // // }
    // // console.log(users);
    // //
    // // _________________________________________
    // // for (let i = 0; i < users.length; i++) {
    // //     let user = users[i];
    // //     let div = document.createElement('div');
    // //     let h3 = document.createElement('h3');
    // //     let p1 = document.createElement('p');
    // //     let p2 = document.createElement('p');
    // //
    // //     h3.innerText = user.name;
    // //     p1.innerText = user.age;
    // //     p2.innerText = user.status;
    // //
    // //     div.appendChild(h3);
    // //     div.appendChild(p1);
    // //     div.appendChild(p2);
    // //     document.body.appendChild(div)
    // // }
    // // console.log(users);
    // // _________________________________________
    // // for (let i = 0; i < users.length; i++) {
    // //     let user = users[i];
    // //     let div = document.createElement('div');
    // //     let name = document.createElement('h3');
    // //     let age = document.createElement('p');
    // //     let status = document.createElement('p');
    // //     let address = document.createElement('div');
    // //
    // //     for (const item in user.address) {
    // //         let temp = document.createElement('div')
    // //         temp.innerHTML = user.address[item];
    // //         address.appendChild(temp)
    // //     }
    // //
    // //     name.innerText = user.name;
    // //     age.innerText = user.age;
    // //     status.innerText = user.status;
    // //
    // //     div.appendChild(name);
    // //     div.appendChild(age);
    // //     div.appendChild(status);
    // //     div.appendChild(address);
    // //     document.body.appendChild(div)
    // // }


    // // // - Дано 2 масиви з рівною кількістю об'єктів.
    // // // Масиви:
    //     let usersWithId = [
    //         {id: 1, name: 'vasya', age: 31, status: false},
    //         {id: 2, name: 'petya', age: 30, status: true},
    //         {id: 3, name: 'kolya', age: 29, status: true},
    //         {id: 4, name: 'olya', age: 28, status: false},];
    //
    //     let citiesWithId = [
    //         {user_id: 3, country: 'USA', city: 'Portland'},
    //         {user_id: 1, country: 'Ukraine', city: 'Ternopil'},
    //         {user_id: 2, country: 'Poland', city: 'Krakow'},
    //         {user_id: 4, country: 'USA', city: 'Miami'},];
    // // //
    // // //
    // // // // З'єднати в один об'єкт користувача та місто з відповідними "id" та "user_id" .
    // // // //     Записати цей об'єкт в новий масив
    // // // // Частковий приклад реультату:
    // // //
    // // //
    //
    // for (const user of usersWithId) {
    //     for (const city of citiesWithId) {
    //         if (user.id === city.user_id) {
    //             user.address = city
    //         }
    //     }
    // }
    //
    // console.log(usersWithId);

    //
    // // - створити розмітці блок з id, class та текстом в середені. Зчитати окремо цей текст з селекторів по id , class та тегу
    // - змінити цей текст використовуючи селектори id, class,  tag
    // - змінити висоту та ширину блоку використовуючи селектори id, class,  tag
    //
    // let id = document.getElementById('content')
    // let innerText = id.innerText
    // id.style.width = '300px';
    // id.style.height = '300px';
    // console.log(id);
    //
    // let elementsByClassName = document.getElementsByClassName('rules')
    // for (const element of elementsByClassName) {
    //     element.innerText = 'Text'
    //     element.style.width = '300px';
    //     element.style.height = '300px';
    // }
    //
    // let elementsByTagName = document.getElementsByTagName('h2')
    // for (const element of elementsByTagName) {
    //     element.innerText = 'Text 222'
    //     element.style.width = '300px';
    //     element.style.height = '300px';
    // }

    // - за допомоги document.createElement та appendChild створити таблицю на 1 рядок з трьома ячейками всередені
    //
    // let table = document.createElement('table');
    // let tr = document.createElement('tr')
    // let td = document.createElement('td')
    // let td2 = document.createElement('td')
    // let td3 = document.createElement('td')
    // tr.appendChild(td)
    // tr.appendChild(td2)
    // tr.appendChild(td3)
    // table.appendChild(tr)
    // document.body.appendChild(table)


    // // - за допомоги document.createElement, appendChild та циклу створити таблицю на 10 рядків з трьома ячейками всередені
    //
    // let table = document.createElement('table');
    // for (let i = 0; i < 10; i++) {
    //     let tr = document.createElement('tr');
    //     for (let i = 0; i < 3; i++) {
    //         let td = document.createElement('td')
    //         tr.appendChild(td)
    //     }
    //     table.appendChild(tr)
    // }
    //
    //
    // document.body.appendChild(table)


    //
    // ============
    // ====class===
    //     ============
    //
    // //     - є сторінка rules.html. Контентом сторінки є заголовки та параграфи. Заголовки (h2) характеризують тему контенту яка вказана в параграфі.
    // //     створити скрипт, котрий зчитує всі заголовки, та робить в блоці з id=content з них список(ul>li), який буде змістом того, що знаходиться на сторінці.
    // //     Скріпт повинен працювати навіть якщо кількість блоків з заголовком та параграфом зміниться.
    // let arrH2 = document.getElementsByTagName('h2');
    // let content = document.getElementById('content');
    // let ul = document.createElement('ul')
    // for (const h2 of arrH2) {
    //     let li = document.createElement('li')
    //     li.innerText = h2.innerText
    //     ul.appendChild(li)
    // }
    //
    // content.appendChild(ul)

    // //
    // // -Є масив котрий характеризує правила. Створити скрипт який ітерує цей масив, та робить з кожне правило в окремому блоці.
    // //     При цому в блоці, номер правила записати в свій блок, текст правила записати в свій окремий блок.
    // //     Результатом відпрацювання скріпта повинна бути структура яка міститься в блоці wrap файла rule.html
    // // //todo add rules
    // //
    // let rules = [
    //     {
    //         title: 'Первое правило Бойцовского клуба.',
    //         body: 'Никому не рассказывать о Бойцовском клубе.'
    //     },
    //     {
    //         title: 'Второе правило Бойцовского клуба.',
    //         body: 'Никогда никому не рассказывать о Бойцовском клубе.'
    //     },
    //     {
    //         title: 'Третье правило Бойцовского клуба.',
    //         body: 'В схватке участвуют только двое.'
    //     },
    //     {
    //         title: 'Четвертое правило Бойцовского клуба.',
    //         body: 'Не более одного поединка за один раз.'
    //     },
    //     {
    //         title: 'Пятое правило Бойцовского клуба.',
    //         body: 'Бойцы сражаются без обуви и голые по пояс.'
    //     },
    //     {
    //         title: 'Шестое правило Бойцовского клуба.',
    //         body: 'Поединок продолжается столько, сколько потребуется.'
    //     },
    //     {
    //         title: 'Седьмое правило Бойцовского клуба.',
    //         body: 'Если противник потерял сознание или делает вид, что потерял, или говорит «Хватит» — поединок окончен.'
    //     },
    //     {
    //         title: 'Восьмое и последнее правило Бойцовского клуба.',
    //         body: 'Новичок обязан принять бой.'
    //     },
    //
    // ];
    //
    //
    // // <div id="wrap">
    // //     <div class="rules rule1">
    // //     <h2>Первое правило Бойцовского клуба.</h2>
    // // <p>Никому не рассказывать о Бойцовском клубе.</p>
    // // </div>
    // let wrap = document.createElement('div');
    // wrap.id = 'wrap'
    // for (let i = 0; i < rules.length; i++) {
    //     const rule = rules[i];
    //     let h2 = document.createElement('div');
    //     let p = document.createElement('p');
    //     div.className = `rules rule${i}`
    //     h2.innerText = rule.title;
    //     p.innerText = rule.body;
    //     div.appendChild(h2);
    //     div.appendChild(p);
    //     wrap.appendChild(div);
    // }
    //
    // documentb.body.appendChild(wrap);


    // fetch('https://jsonplaceholder.typicode.com/albums')
    //     .then(albums => albums.json())
    //     .then(albumsJSON => {
    //     console.log(albumsJSON);
    //         for (const album of albumsJSON) {
    //         let div = document.createElement('div')
    //             div.innerText = `${album.id}--${album.title}--${album.userId}`
    //             document.body.appendChild(div)
    //         }
    // })

    //
    // // *** за допомогою fetch (як в прикладі) отримати від jsonplaceholder всі users. За допомогою document.createElement вивести їх в браузер.
    // // Помістити кожен окремий об'єкт в блок, при цьому кожен внутрішній об'єкт в свій блок (блок в блоці).
    //
    // fetch('https://jsonplaceholder.typicode.com/users')
    //     .then(users => users.json())
    //     .then(usersJSON => {
    //     console.log(usersJSON);
    //
    //
    //         for (const users of usersJSON) {
    //
    //             div.innerText = `${users.id}--${users.name}--${users.username}--${users.email}--${users.address}`
    //             document.body.appendChild(div)
    //
    //         }
    // })

</script>
</body>
</html>
