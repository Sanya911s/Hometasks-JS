<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Title</title>
</head>
<body>
<div id="List"></div>


<script>
    // // // // - створити функцію яка виводить масив
    // //
    // let array2 = [1, 2, 3, 4, 5, 6, 7];
    //
    // function printArray(arr) {
    //     console.log(arr);
    //     for (const arrElement of arr) {
    //         console.log(arrElement);
    //     }
    // }
    // printArray(array2)
    //
    //
    // // // // // - створити функцію яка заповнює масив рандомними числами та виводить його. Для виведення використати попвередню функцію.
    // // //
    //
    // function createArray(length, min, max) {
    //     let array = [];
    //     for (let i = 0; i < length; i++) {
    //         array.push(Math.floor(Math.random() *(max-min) + min))
    //     }
    //     return array;
    // }
    // let array1 = createArray(10, 10, 100);
    // printArray(array1)


    // // - створити функцію яка приймає три числа та виводить та повертає найменьше.
    //
    //
    // function returnMinFromThree(a, b, c) {
    //     let min;
    //     let max;
    //     if (a < b && a < c) min = a;
    //     if (b < a && b < c) min = b;
    //     if (c < b && c < a) min = c;
    //     console.log('min', min);
    //     return min;
    // }
    // let min = returnMinFromThree(1, 2, 3);
    // console.log(min);


    // // - створити функцію яка приймає три числа та виводить та повертає найбільше.
    //
    // function returnMinFromThree(a, b, c) {
    //     let min;
    //     let max;
    //     if (a > b && a > c) max = a;
    //     if (b > a && b > c) max = b;
    //     if (c > b && c > a) max = c;
    //     console.log('max', max);
    //     return max;
    // }
    //
    // let max = returnMinFromThree(1, 2, 3);
    // console.log(max);


    // // // - створити функцію яка приймає будь-яку кількість чисел, повертає найменьше, а виводить найбільше
    //
    // function returnMinPrintingMax() {
    //     console.log(arguments);
    //     let min = arguments[0];
    //     let max = arguments[0];
    //     for (const item of arguments) {
    //         if (item > max) max = item;
    //         if (item < min) min = item;
    //     }
    //     console.log('max', max);
    //     return min;
    // }
    // let min = returnMinPrintingMax(1, 2, 3, 4, 5)
    // console.log('min', min);


    // // // - створити функцію яка повертає найбільше число з масиву
    // let myFunc = (array)=> {
    //     let max = array[0];
    //     for (const item of array) {
    //         if (max < item) max = item
    //     }
    //     return max
    // }
    // let myFunc1 = myFunc([1, 2, 3, 4, 5])
    // console.log(myFunc1);

    // - створити функцію яка повертає найменьше число з масиву
    //
    // let myFunc = (array)=> {
    //     let min = array[0];
    //     for (const item of array) {
    //         if (min > item) min = item
    //     }
    //     return min
    // }
    // let myFunc1 = myFunc([1, 2, 3, 4, 5])
    // console.log(myFunc1);


    // // // - створити функцію яка приймає масив чисел та складає значення елементів масиву та повертає його.
    // // // // - створити функцію яка приймає масив чисел та повертає середнє арифметичне його значень.
    //
    // function average(array) {
    //     let sum  = 0;
    //     for (const item of array) {
    //         sum += item
    //     }
    //     return sum/array.length
    // }
    // let average1 = average([2,2,2,2]);
    // console.log('average1', average1);


    // // - Створити функцію яка приймає масив будь яких объектів, та повертає значення кількості об'єктів в масиві
    // let users = [
    //     {
    //         "id": 1,
    //         "name": "Leanne Graham",
    //         "username": "Bret",
    //         "email": "Sincere@april.biz",
    //         "address": {
    //             "street": "Kulas Light",
    //             "suite": "Apt. 556",
    //             "city": "Gwenborough",
    //             "zipcode": "92998-3874",
    //             "geo": {
    //                 "lat": "-37.3159",
    //                 "lng": "81.1496"
    //             }
    //         },
    //         "phone": "1-770-736-8031 x56442",
    //         "website": "hildegard.org",
    //         "company": {
    //             "name": "Romaguera-Crona",
    //             "catchPhrase": "Multi-layered client-server neural-net",
    //             "bs": "harness real-time e-markets"
    //         }
    //     },
    //     {
    //         "id": 2,
    //         "name": "Ervin Howell",
    //         "username": "Antonette",
    //         "email": "Shanna@melissa.tv",
    //         "address": {
    //             "street": "Victor Plains",
    //             "suite": "Suite 879",
    //             "city": "Wisokyburgh",
    //             "zipcode": "90566-7771",
    //             "geo": {
    //                 "lat": "-43.9509",
    //                 "lng": "-34.4618"
    //             }
    //         },
    //         "phone": "010-692-6593 x09125",
    //         "website": "anastasia.net",
    //         "company": {
    //             "name": "Deckow-Crist",
    //             "catchPhrase": "Proactive didactic contingency",
    //             "bs": "synergize scalable supply-chains"
    //         }
    //     },
    //     {
    //         "id": 3,
    //         "name": "Clementine Bauch",
    //         "username": "Samantha",
    //         "email": "Nathan@yesenia.net",
    //         "address": {
    //             "street": "Douglas Extension",
    //             "suite": "Suite 847",
    //             "city": "McKenziehaven",
    //             "zipcode": "59590-4157",
    //             "geo": {
    //                 "lat": "-68.6102",
    //                 "lng": "-47.0653"
    //             }
    //         },
    //         "phone": "1-463-123-4447",
    //         "website": "ramiro.info",
    //         "company": {
    //             "name": "Romaguera-Jacobson",
    //             "catchPhrase": "Face to face bifurcated interface",
    //             "bs": "e-enable strategic applications"
    //         }
    //     },
    //     {
    //         "id": 4,
    //         "name": "Patricia Lebsack",
    //         "username": "Karianne",
    //         "email": "Julianne.OConner@kory.org",
    //         "address": {
    //             "street": "Hoeger Mall",
    //             "suite": "Apt. 692",
    //             "city": "South Elvis",
    //             "zipcode": "53919-4257",
    //             "geo": {
    //                 "lat": "29.4572",
    //                 "lng": "-164.2990"
    //             }
    //         },
    //         "phone": "493-170-9623 x156",
    //         "website": "kale.biz",
    //         "company": {
    //             "name": "Robel-Corkery",
    //             "catchPhrase": "Multi-tiered zero tolerance productivity",
    //             "bs": "transition cutting-edge web services"
    //         }
    //     },
    //     {
    //         "id": 5,
    //         "name": "Chelsey Dietrich",
    //         "username": "Kamren",
    //         "email": "Lucio_Hettinger@annie.ca",
    //         "address": {
    //             "street": "Skiles Walks",
    //             "suite": "Suite 351",
    //             "city": "Roscoeview",
    //             "zipcode": "33263",
    //             "geo": {
    //                 "lat": "-31.8129",
    //                 "lng": "62.5342"
    //             }
    //         },
    //         "phone": "(254)954-1289",
    //         "website": "demarco.info",
    //         "company": {
    //             "name": "Keebler LLC",
    //             "catchPhrase": "User-centric fault-tolerant solution",
    //             "bs": "revolutionize end-to-end systems"
    //         }
    //     },
    //     {
    //         "id": 6,
    //         "name": "Mrs. Dennis Schulist",
    //         "username": "Leopoldo_Corkery",
    //         "email": "Karley_Dach@jasper.info",
    //         "address": {
    //             "street": "Norberto Crossing",
    //             "suite": "Apt. 950",
    //             "city": "South Christy",
    //             "zipcode": "23505-1337",
    //             "geo": {
    //                 "lat": "-71.4197",
    //                 "lng": "71.7478"
    //             }
    //         },
    //         "phone": "1-477-935-8478 x6430",
    //         "website": "ola.org",
    //         "company": {
    //             "name": "Considine-Lockman",
    //             "catchPhrase": "Synchronised bottom-line interface",
    //             "bs": "e-enable innovative applications"
    //         }
    //     },
    //     {
    //         "id": 7,
    //         "name": "Kurtis Weissnat",
    //         "username": "Elwyn.Skiles",
    //         "email": "Telly.Hoeger@billy.biz",
    //         "address": {
    //             "street": "Rex Trail",
    //             "suite": "Suite 280",
    //             "city": "Howemouth",
    //             "zipcode": "58804-1099",
    //             "geo": {
    //                 "lat": "24.8918",
    //                 "lng": "21.8984"
    //             }
    //         },
    //         "phone": "210.067.6132",
    //         "website": "elvis.io",
    //         "company": {
    //             "name": "Johns Group",
    //             "catchPhrase": "Configurable multimedia task-force",
    //             "bs": "generate enterprise e-tailers"
    //         }
    //     },
    //     {
    //         "id": 8,
    //         "name": "Nicholas Runolfsdottir V",
    //         "username": "Maxime_Nienow",
    //         "email": "Sherwood@rosamond.me",
    //         "address": {
    //             "street": "Ellsworth Summit",
    //             "suite": "Suite 729",
    //             "city": "Aliyaview",
    //             "zipcode": "45169",
    //             "geo": {
    //                 "lat": "-14.3990",
    //                 "lng": "-120.7677"
    //             }
    //         },
    //         "phone": "586.493.6943 x140",
    //         "website": "jacynthe.com",
    //         "company": {
    //             "name": "Abernathy Group",
    //             "catchPhrase": "Implemented secondary concept",
    //             "bs": "e-enable extensible e-tailers"
    //         }
    //     },
    //     {
    //         "id": 9,
    //         "name": "Glenna Reichert",
    //         "username": "Delphine",
    //         "email": "Chaim_McDermott@dana.io",
    //         "address": {
    //             "street": "Dayna Park",
    //             "suite": "Suite 449",
    //             "city": "Bartholomebury",
    //             "zipcode": "76495-3109",
    //             "geo": {
    //                 "lat": "24.6463",
    //                 "lng": "-168.8889"
    //             }
    //         },
    //         "phone": "(775)976-6794 x41206",
    //         "website": "conrad.com",
    //         "company": {
    //             "name": "Yost and Sons",
    //             "catchPhrase": "Switchable contextually-based project",
    //             "bs": "aggregate real-time technologies"
    //         }
    //     },
    //     {
    //         "id": 10,
    //         "name": "Clementina DuBuque",
    //         "username": "Moriah.Stanton",
    //         "email": "Rey.Padberg@karina.biz",
    //         "address": {
    //             "street": "Kattie Turnpike",
    //             "suite": "Suite 198",
    //             "city": "Lebsackbury",
    //             "zipcode": "31428-2261",
    //             "geo": {
    //                 "lat": "-38.2386",
    //                 "lng": "57.2232"
    //             }
    //         },
    //         "phone": "024-648-3804",
    //         "website": "ambrose.net",
    //         "company": {
    //             "name": "Hoeger LLC",
    //             "catchPhrase": "Centralized empowering task-force",
    //             "bs": "target end-to-end models"
    //         }
    //     }
    // ];
    // function countFields(arrayObj) {
    //     let count = 0;
    //     for (const item of arrayObj) {
    //         if (typeof item === 'object' && !Array.isArray(item)) {
    //             count++
    //         }
    //     }
    //     return count;
    // }
    //
    // let number = countFields(users)
    // console.log(number);


    // // // // - Створити функцію яка приймає масив будь яких объектів, та повертає загальн кількість полів в них
    // //
    // let users = [
    //     {
    //         "id": 1,
    //         "name": "Leanne Graham",
    //         "username": "Bret",
    //         "email": "Sincere@april.biz",
    //         "address": {
    //             "street": "Kulas Light",
    //             "suite": "Apt. 556",
    //             "city": "Gwenborough",
    //             "zipcode": "92998-3874",
    //             "geo": {
    //                 "lat": "-37.3159",
    //                 "lng": "81.1496"
    //             }
    //         },
    //         "phone": "1-770-736-8031 x56442",
    //         "website": "hildegard.org",
    //         "company": {
    //             "name": "Romaguera-Crona",
    //             "catchPhrase": "Multi-layered client-server neural-net",
    //             "bs": "harness real-time e-markets"
    //         }
    //     },
    //     {
    //         "id": 2,
    //         "name": "Ervin Howell",
    //         "username": "Antonette",
    //         "email": "Shanna@melissa.tv",
    //         "address": {
    //             "street": "Victor Plains",
    //             "suite": "Suite 879",
    //             "city": "Wisokyburgh",
    //             "zipcode": "90566-7771",
    //             "geo": {
    //                 "lat": "-43.9509",
    //                 "lng": "-34.4618"
    //             }
    //         },
    //         "phone": "010-692-6593 x09125",
    //         "website": "anastasia.net",
    //         "company": {
    //             "name": "Deckow-Crist",
    //             "catchPhrase": "Proactive didactic contingency",
    //             "bs": "synergize scalable supply-chains"
    //         }
    //     },
    //     {
    //         "id": 3,
    //         "name": "Clementine Bauch",
    //         "username": "Samantha",
    //         "email": "Nathan@yesenia.net",
    //         "address": {
    //             "street": "Douglas Extension",
    //             "suite": "Suite 847",
    //             "city": "McKenziehaven",
    //             "zipcode": "59590-4157",
    //             "geo": {
    //                 "lat": "-68.6102",
    //                 "lng": "-47.0653"
    //             }
    //         },
    //         "phone": "1-463-123-4447",
    //         "website": "ramiro.info",
    //         "company": {
    //             "name": "Romaguera-Jacobson",
    //             "catchPhrase": "Face to face bifurcated interface",
    //             "bs": "e-enable strategic applications"
    //         }
    //     },
    //     {
    //         "id": 4,
    //         "name": "Patricia Lebsack",
    //         "username": "Karianne",
    //         "email": "Julianne.OConner@kory.org",
    //         "address": {
    //             "street": "Hoeger Mall",
    //             "suite": "Apt. 692",
    //             "city": "South Elvis",
    //             "zipcode": "53919-4257",
    //             "geo": {
    //                 "lat": "29.4572",
    //                 "lng": "-164.2990"
    //             }
    //         },
    //         "phone": "493-170-9623 x156",
    //         "website": "kale.biz",
    //         "company": {
    //             "name": "Robel-Corkery",
    //             "catchPhrase": "Multi-tiered zero tolerance productivity",
    //             "bs": "transition cutting-edge web services"
    //         }
    //     },
    //     {
    //         "id": 5,
    //         "name": "Chelsey Dietrich",
    //         "username": "Kamren",
    //         "email": "Lucio_Hettinger@annie.ca",
    //         "address": {
    //             "street": "Skiles Walks",
    //             "suite": "Suite 351",
    //             "city": "Roscoeview",
    //             "zipcode": "33263",
    //             "geo": {
    //                 "lat": "-31.8129",
    //                 "lng": "62.5342"
    //             }
    //         },
    //         "phone": "(254)954-1289",
    //         "website": "demarco.info",
    //         "company": {
    //             "name": "Keebler LLC",
    //             "catchPhrase": "User-centric fault-tolerant solution",
    //             "bs": "revolutionize end-to-end systems"
    //         }
    //     },
    //     {
    //         "id": 6,
    //         "name": "Mrs. Dennis Schulist",
    //         "username": "Leopoldo_Corkery",
    //         "email": "Karley_Dach@jasper.info",
    //         "address": {
    //             "street": "Norberto Crossing",
    //             "suite": "Apt. 950",
    //             "city": "South Christy",
    //             "zipcode": "23505-1337",
    //             "geo": {
    //                 "lat": "-71.4197",
    //                 "lng": "71.7478"
    //             }
    //         },
    //         "phone": "1-477-935-8478 x6430",
    //         "website": "ola.org",
    //         "company": {
    //             "name": "Considine-Lockman",
    //             "catchPhrase": "Synchronised bottom-line interface",
    //             "bs": "e-enable innovative applications"
    //         }
    //     },
    //     {
    //         "id": 7,
    //         "name": "Kurtis Weissnat",
    //         "username": "Elwyn.Skiles",
    //         "email": "Telly.Hoeger@billy.biz",
    //         "address": {
    //             "street": "Rex Trail",
    //             "suite": "Suite 280",
    //             "city": "Howemouth",
    //             "zipcode": "58804-1099",
    //             "geo": {
    //                 "lat": "24.8918",
    //                 "lng": "21.8984"
    //             }
    //         },
    //         "phone": "210.067.6132",
    //         "website": "elvis.io",
    //         "company": {
    //             "name": "Johns Group",
    //             "catchPhrase": "Configurable multimedia task-force",
    //             "bs": "generate enterprise e-tailers"
    //         }
    //     },
    //     {
    //         "id": 8,
    //         "name": "Nicholas Runolfsdottir V",
    //         "username": "Maxime_Nienow",
    //         "email": "Sherwood@rosamond.me",
    //         "address": {
    //             "street": "Ellsworth Summit",
    //             "suite": "Suite 729",
    //             "city": "Aliyaview",
    //             "zipcode": "45169",
    //             "geo": {
    //                 "lat": "-14.3990",
    //                 "lng": "-120.7677"
    //             }
    //         },
    //         "phone": "586.493.6943 x140",
    //         "website": "jacynthe.com",
    //         "company": {
    //             "name": "Abernathy Group",
    //             "catchPhrase": "Implemented secondary concept",
    //             "bs": "e-enable extensible e-tailers"
    //         }
    //     },
    //     {
    //         "id": 9,
    //         "name": "Glenna Reichert",
    //         "username": "Delphine",
    //         "email": "Chaim_McDermott@dana.io",
    //         "address": {
    //             "street": "Dayna Park",
    //             "suite": "Suite 449",
    //             "city": "Bartholomebury",
    //             "zipcode": "76495-3109",
    //             "geo": {
    //                 "lat": "24.6463",
    //                 "lng": "-168.8889"
    //             }
    //         },
    //         "phone": "(775)976-6794 x41206",
    //         "website": "conrad.com",
    //         "company": {
    //             "name": "Yost and Sons",
    //             "catchPhrase": "Switchable contextually-based project",
    //             "bs": "aggregate real-time technologies"
    //         }
    //     },
    //     {
    //         "id": 10,
    //         "name": "Clementina DuBuque",
    //         "username": "Moriah.Stanton",
    //         "email": "Rey.Padberg@karina.biz",
    //         "address": {
    //             "street": "Kattie Turnpike",
    //             "suite": "Suite 198",
    //             "city": "Lebsackbury",
    //             "zipcode": "31428-2261",
    //             "geo": {
    //                 "lat": "-38.2386",
    //                 "lng": "57.2232"
    //             }
    //         },
    //         "phone": "024-648-3804",
    //         "website": "ambrose.net",
    //         "company": {
    //             "name": "Hoeger LLC",
    //             "catchPhrase": "Centralized empowering task-force",
    //             "bs": "target end-to-end models"
    //         }
    //     }
    // ]
    // function countFields(arrayObj) {
    //     let count = 0;
    //     for (const item of arrayObj) {
    //         if (typeof item === 'object' && !Array.isArray(item)) {
    //             for (const key in item) {
    //                 count++
    //             }
    //         }
    //     }
    //     return count;
    // }
    //
    // let number = countFields(users)
    // console.log(number);




    // // - створити функцію  яка скаладає значення елементів з однаковими індексами  та повертає новий результуючий масив.
    // //     Приклад
    // //     [1,2,3,4]
    // //     [2,3,4,5]
    // // результат
    // //     [3,5,7,9]
    //
    // let firstArr = [1,2,3,4];
    // let secondArr = [2,3,4,5];
    // let thirdArr = (a, b, c, d, e) => {console.log([(firstArr[0] + secondArr[0]), (firstArr[1] + secondArr[1]), (firstArr[2] + secondArr[2] ), (firstArr[3] + secondArr[3])])}
    // thirdArr((firstArr[0] + secondArr[0]), (firstArr[1] + secondArr[1]), (firstArr[2] + secondArr[2] ), (firstArr[3] + secondArr[3]))

    // ІНШИЙ ВАРІАНТ, БІЛЬШ КОРОТКИЙ
    // function splitArray(array1, array2) {
    //     let result = [];
    //     for (let i = 0; i < array1.length; i++) {
    //        result.push(array1[i] + array2[i]);
    //     }
    //     return result
    // }
    // let splitArray1 = splitArray([1,2,3,4], [2,3,4,5]);
    // console.log(splitArray1);



    // // // - *** приймає масив та число "i", та міняє місцями об`єкт який знаходиться в індексі "i" на "i+1"
    // // // - *** створити функцію яка буде переносити елементи з значенням 0 у кінець маисву. Зберігаючи при цьому порядок не нульових значень.
    // // // Двожина масиву від 2 до 100
    // // // Приклад
    // // // [1,0,6,0,3] => [1,6,3,0,0]
    // // // [0,1,2,3,4] => [1,2,3,4,0]
    // // // [0,0,1,0]   => [1,0,0,0]
    // // //
    // function myFunc(array) {
    //     let zero = [];
    //     let number = [];
    //     for (const item of array) {
    //         if (item === 0) {
    //             zero.push(0);
    //         }else {
    //             number.push(item)
    //         }
    //     }
    //     return number.concat(zero)
    // }
    //
    // console.log(myFunc([1,0,6,0,3]));
    // console.log(myFunc([0,1,2,3,4]));
    // console.log(myFunc([0,0,1,0]));




    // // Створити функцію яка :
    // // - Додає в боді блок з текстом "Hello owu"
    // - Додає в боді елемент з текстом . Тип елементу та текст отримати через аргументи
    //
    // function addDiv(message, typeTag) {
    //     let tag = document.createElement(typeTag);
    //     tag.innerHTML = message || 'Hello world';
    //     document.body.appendChild(tag);
    // }
    // addDiv('HOHOHOHO', 'div')
    // // addDiv(null, 'div')




    // - приймає масив автомобілів (можна взяти з попередніх дз ),та  індентифікатор елемнту в який потрібно додати список цих автомобілів.
    //
    // let cars =[
    //     {model: 'Toyota', year: 2005, hp: 160, color: 'red', driver: {name: 'Petro', age: 42, sex: 'man', experience: '20 years'}},
    //     {model: 'Mercedes', year: 2018, hp: 193, color: 'green', driver: {name: 'Nastya', age: 28, sex: 'woman', experience: '3 years'}},
    //     {model: 'BMW', year: 1998, hp: 217, color: 'blue', driver: {name: 'Oleg', age: 35, sex: 'man', experience: '10 years'}},
    //     {model: 'Volkswagen', year: 2001, hp: 190, color: 'white', driver: {name: 'Ivan', age: 26, sex: 'man', experience: '7'}},
    //     {model: 'Porsche', year: 2016, hp: 279, color: 'orange', driver: {name: 'Ilona', age: 33, sex: 'woman', experience: '6'}},
    //     {model: 'Bentley', year: 2007, hp: 226, color: 'brown', driver: {name: 'Valeriy', age: 51, sex: 'man', experience: '30'}},
    //     {model: 'Infinity', year: 2014, hp: 190,  color: 'silver', driver: {name: 'Vira', age: 25, sex: 'woman', experience: '4'}},
    //     {model: 'Ford', year: 2005, hp: 160, color: 'yellow', driver: {name: 'Yevgen', age: 40, sex: 'man', experience: '17'}},
    //     {model: 'Renault', year: 2000, hp: 150, color: 'aqua', driver: {name: 'Yaroslav', age: 28, sex: 'man', experience: '8'}},
    //     {model: 'Skoda', year: 2015, hp: 160, color: 'black', driver: {name: 'Oleksandr', age: 22, sex: 'man', experience: '4'}},
    //     ];
    //
    // function addListCars(arrayCars, idTag) {
    //     let block = document.getElementById(idTag);
    //     let ul = document.createElement('ul');
    //     for (let i = 0; i < arrayCars.length; i++) {
    //         let car = arrayCars[i];
    //         let li = document.createElement('li');
    //         li.innerHTML = `${i + 1} - ${car.model}`;
    //         ul.appendChild(li);
    //     }
    //     block.appendChild(ul)
    // }
    // addListCars(cars, 'List')





    // // Для кожного автомобіля створити свій блок, та додати його в елемент, індентифікатор якого ви отримали. Всі властивості авто в обному блоці
    // // - приймає масив автомобілів (можна взяти з попередніх дз ),та  індентифікатор елемнту в який потрібно додати список цих автомобілів.
    // // Для кожного автомобіля створити свій блок, та додати його в елемент, індентифікатор якого ви отримали.
    // // Для кожної властивості створити всередені блока автомоблія свій блок
    //
    // let cars =[
    //     {model: 'Toyota', year: 2005, hp: 160, color: 'red', driver: {name: 'Petro', age: 42, sex: 'man', experience: '20 years'}},
    //     {model: 'Mercedes', year: 2018, hp: 193, color: 'green', driver: {name: 'Nastya', age: 28, sex: 'woman', experience: '3 years'}},
    //     {model: 'BMW', year: 1998, hp: 217, color: 'blue', driver: {name: 'Oleg', age: 35, sex: 'man', experience: '10 years'}},
    //     {model: 'Volkswagen', year: 2001, hp: 190, color: 'white', driver: {name: 'Ivan', age: 26, sex: 'man', experience: '7'}},
    //     {model: 'Porsche', year: 2016, hp: 279, color: 'orange', driver: {name: 'Ilona', age: 33, sex: 'woman', experience: '6'}},
    //     {model: 'Bentley', year: 2007, hp: 226, color: 'brown', driver: {name: 'Valeriy', age: 51, sex: 'man', experience: '30'}},
    //     {model: 'Infinity', year: 2014, hp: 190,  color: 'silver', driver: {name: 'Vira', age: 25, sex: 'woman', experience: '4'}},
    //     {model: 'Ford', year: 2005, hp: 160, color: 'yellow', driver: {name: 'Yevgen', age: 40, sex: 'man', experience: '17'}},
    //     {model: 'Renault', year: 2000, hp: 150, color: 'aqua', driver: {name: 'Yaroslav', age: 28, sex: 'man', experience: '8'}},
    //     {model: 'Skoda', year: 2015, hp: 160, color: 'black', driver: {name: 'Oleksandr', age: 22, sex: 'man', experience: '4'}},
    // ];
    //
    // function addListCars(arrayCars, idTag) {
    //     let block = document.getElementById(idTag);
    //     // let div = document.createElement('div');
    //     for (let i = 0; i < arrayCars.length; i++) {
    //         let car = arrayCars[i];
    //         let div = document.createElement('div');
    //         let model = document.createElement('h2');
    //         let year = document.createElement('h3');
    //         let color = document.createElement('p');
    //         model.innerHTML = `model: ${car.model}`;
    //         year.innerHTML = `year: ${car.year}`;
    //         color.innerHTML = `color: ${car.color}`;
    //         div.appendChild(model);
    //         div.appendChild(year);
    //         div.appendChild(color);
    //
    //         block.appendChild(div);
    //     }
    //
    // }
    // addListCars(cars, 'List')


    // // //
    // // // (на основі минулого ДЗ)
    // // // **- функція приймає 2 масиви з рівною кількістю об'єктів та з'єднює в один об'єкт користувача та місто з відповідними "id" та "user_id",
    // // // та повертає масив цих з'єднаних об'єктів.
    // // // Приклад масивів:
    //             let usersWithId = [
    //                     {id: 1, name: 'vasya', age: 31, status: false},
    //                     {id: 2, name: 'petya', age: 30, status: true},
    //                     {id: 3, name: 'kolya', age: 29, status: true},
    //                     {id: 4, name: 'olya', age: 28, status: false}];
    //
    //             let citiesWithId = [
    //                 {user_id: 3, country: 'USA', city: 'Portland'},
    //                 {user_id: 1, country: 'Ukraine', city: 'Ternopil'},
    //                 {user_id: 2, country: 'Poland', city: 'Krakow'}];
    //
    //             function split(userArray, cityArray) {
    //                 let users = JSON.parse(JSON.stringify(userArray));
    //                 let cities = JSON.parse(JSON.stringify(cityArray));
    //
    //                 for (const city of cities) {
    //                     for (const user of users) {
    //                         if (city.user_id === user.id) {
    //                             user.address = city;
    //                         }
    //                     }
    //
    //                 }
    //                 return users;
    //
    //             }
    //
    //             let split1 = split(usersWithId, citiesWithId);
    // console.log('usersWithId', usersWithId);
    // console.log('citiesWithId', citiesWithId);
    // console.log('___________________________________________________');
    // console.log(split1);



    //
    //
    //
    //
    //
    //
    //
    //
    //
    // ***- беремо завдання з правилами з укроку №3 :
    // Та робимо це функцією.При цьому правила отримувати через аргумент.
    // "Є масив котрий характеризує правила. Створити скрипт який ітерує цей масив, та робить з кожне правило в окремому блоці.
    // При цому в блоці, номер правила записати в свій блок, текст правила записати в свій окремий блок.
    // Результатом відпрацювання скріпта повинна бути структура яка міститься в блоці wrap файла rule.html
    // //todo add rules
    //
    // 			let rules = [
    // 				{
    // 					title: 'Первое правило Бойцовского клуба.',
    // 					body: 'Никому не рассказывать о Бойцовском клубе.'
    // 				},
    // 				{
    // 					title: 'Второе правило Бойцовского клуба.',
    // 					body: 'Никогда никому не рассказывать о Бойцовском клубе.'
    // 				},
    // 				{
    // 					title: 'Третье правило Бойцовского клуба.',
    // 					body: 'В схватке участвуют только двое.'
    // 				},
    // 				{
    // 					title: 'Четвертое правило Бойцовского клуба.',
    // 					body: 'Не более одного поединка за один раз.'
    // 				},
    // 				{
    // 					title: 'Пятое правило Бойцовского клуба.',
    // 					body: 'Бойцы сражаются без обуви и голые по пояс.'
    // 				},
    // 				{
    // 					title: 'Шестое правило Бойцовского клуба.',
    // 					body: 'Поединок продолжается столько, сколько потребуется.'
    // 				},
    // 				{
    // 					title: 'Седьмое правило Бойцовского клуба.',
    // 					body: 'Если противник потерял сознание или делает вид, что потерял, или говорит «Хватит» — поединок окончен.'
    // 				},
    // 				{
    // 					title: 'Восьмое и последнее правило Бойцовского клуба.',
    // 					body: 'Новичок обязан принять бой.'
    // 				},
    //
    // 			];


</script>
</body>
</html>
